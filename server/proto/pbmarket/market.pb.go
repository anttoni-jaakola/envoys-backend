// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: server/proto/pbmarket/market.proto

package pbmarket

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetTransactionIncomingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid      int64   `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Comment  string  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Flags    int32   `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *SetTransactionIncomingRequest) Reset() {
	*x = SetTransactionIncomingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTransactionIncomingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTransactionIncomingRequest) ProtoMessage() {}

func (x *SetTransactionIncomingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTransactionIncomingRequest.ProtoReflect.Descriptor instead.
func (*SetTransactionIncomingRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{0}
}

func (x *SetTransactionIncomingRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SetTransactionIncomingRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SetTransactionIncomingRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SetTransactionIncomingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SetTransactionIncomingRequest) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ResponseIncomingTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseIncomingTransaction) Reset() {
	*x = ResponseIncomingTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseIncomingTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseIncomingTransaction) ProtoMessage() {}

func (x *ResponseIncomingTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseIncomingTransaction.ProtoReflect.Descriptor instead.
func (*ResponseIncomingTransaction) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{1}
}

type SetRequestIncomingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid      int64   `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Comment  string  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Flags    int32   `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *SetRequestIncomingRequest) Reset() {
	*x = SetRequestIncomingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequestIncomingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequestIncomingRequest) ProtoMessage() {}

func (x *SetRequestIncomingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequestIncomingRequest.ProtoReflect.Descriptor instead.
func (*SetRequestIncomingRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{2}
}

func (x *SetRequestIncomingRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SetRequestIncomingRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SetRequestIncomingRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SetRequestIncomingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SetRequestIncomingRequest) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type ResponseIncomingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseIncomingRequest) Reset() {
	*x = ResponseIncomingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseIncomingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseIncomingRequest) ProtoMessage() {}

func (x *ResponseIncomingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseIncomingRequest.ProtoReflect.Descriptor instead.
func (*ResponseIncomingRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{3}
}

// Market set order.
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Order id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Instrument name.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Internal client id.
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// Counterparty Id.
	Cid int64 `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	// Order price.
	Price float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	// Order volume.
	Volume float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	// Quantity value.
	Size float64 `protobuf:"fixed64,7,opt,name=size,proto3" json:"size,omitempty"`
	// Order side, "bid" - buy and "ask" - sell.
	Side string `protobuf:"bytes,8,opt,name=side,proto3" json:"side,omitempty"`
	// Order types "limitIOC", "limitFOK", "marketIOC", "marketFOK".
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	// Create order at.
	CreateAt string `protobuf:"bytes,10,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{4}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Order) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Order) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Order) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Order) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type GetRequestOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instrument name.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetRequestOrder) Reset() {
	*x = GetRequestOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestOrder) ProtoMessage() {}

func (x *GetRequestOrder) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestOrder.ProtoReflect.Descriptor instead.
func (*GetRequestOrder) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{5}
}

func (x *GetRequestOrder) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetRequestOrder) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRequestOrder) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type SetRequestOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instrument name.
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Order limit price (for postOnly and limit orders).
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// Order size. If specified - volume shouldn't be used.
	Size float64 `protobuf:"fixed64,3,opt,name=size,proto3" json:"size,omitempty"`
	// Order volume to be filled. Can be used by takers only. If specified - size shouldn't be used.
	Volume float64 `protobuf:"fixed64,4,opt,name=volume,proto3" json:"volume,omitempty"`
	// Order side, use "bid" to buy and "ask" to sell.
	Side string `protobuf:"bytes,5,opt,name=side,proto3" json:"side,omitempty"`
	// Order types "limitIOC", "limitFOK", "marketIOC", "marketFOK" can only be used by market takers. "postOnly" and "limit" can only be used by market makers..
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SetRequestOrder) Reset() {
	*x = SetRequestOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequestOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequestOrder) ProtoMessage() {}

func (x *SetRequestOrder) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequestOrder.ProtoReflect.Descriptor instead.
func (*SetRequestOrder) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{6}
}

func (x *SetRequestOrder) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SetRequestOrder) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SetRequestOrder) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SetRequestOrder) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SetRequestOrder) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *SetRequestOrder) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ResponseOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*Order `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Count  int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ResponseOrder) Reset() {
	*x = ResponseOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOrder) ProtoMessage() {}

func (x *ResponseOrder) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOrder.ProtoReflect.Descriptor instead.
func (*ResponseOrder) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseOrder) GetFields() []*Order {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ResponseOrder) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Market depth.
type Depth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string              `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Fields []*Depth_Attributes `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Depth) Reset() {
	*x = Depth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth) ProtoMessage() {}

func (x *Depth) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth.ProtoReflect.Descriptor instead.
func (*Depth) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{8}
}

func (x *Depth) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Depth) GetFields() []*Depth_Attributes {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Market book.
type Reception struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid []*Reception_Book `protobuf:"bytes,1,rep,name=bid,proto3" json:"bid,omitempty"`
	Ask []*Reception_Book `protobuf:"bytes,2,rep,name=ask,proto3" json:"ask,omitempty"`
}

func (x *Reception) Reset() {
	*x = Reception{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reception) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reception) ProtoMessage() {}

func (x *Reception) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reception.ProtoReflect.Descriptor instead.
func (*Reception) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{9}
}

func (x *Reception) GetBid() []*Reception_Book {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *Reception) GetAsk() []*Reception_Book {
	if x != nil {
		return x.Ask
	}
	return nil
}

type GetRequestBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instrument name.
	Instrument string `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	// Whether to return Tradable order book. By default method returns Global order book.
	Tradable bool `protobuf:"varint,2,opt,name=tradable,proto3" json:"tradable,omitempty"`
}

func (x *GetRequestBook) Reset() {
	*x = GetRequestBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestBook) ProtoMessage() {}

func (x *GetRequestBook) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestBook.ProtoReflect.Descriptor instead.
func (*GetRequestBook) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{10}
}

func (x *GetRequestBook) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *GetRequestBook) GetTradable() bool {
	if x != nil {
		return x.Tradable
	}
	return false
}

type ResponseBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields *Reception `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponseBook) Reset() {
	*x = ResponseBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBook) ProtoMessage() {}

func (x *ResponseBook) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBook.ProtoReflect.Descriptor instead.
func (*ResponseBook) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseBook) GetFields() *Reception {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Market settlement.
type SettlementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Incoming []*SettlementRequest_Item `protobuf:"bytes,1,rep,name=incoming,proto3" json:"incoming,omitempty"`
	Outgoing []*SettlementRequest_Item `protobuf:"bytes,2,rep,name=outgoing,proto3" json:"outgoing,omitempty"`
}

func (x *SettlementRequest) Reset() {
	*x = SettlementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementRequest) ProtoMessage() {}

func (x *SettlementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementRequest.ProtoReflect.Descriptor instead.
func (*SettlementRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{12}
}

func (x *SettlementRequest) GetIncoming() []*SettlementRequest_Item {
	if x != nil {
		return x.Incoming
	}
	return nil
}

func (x *SettlementRequest) GetOutgoing() []*SettlementRequest_Item {
	if x != nil {
		return x.Outgoing
	}
	return nil
}

type GetRequestSettlementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequestSettlementRequest) Reset() {
	*x = GetRequestSettlementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestSettlementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestSettlementRequest) ProtoMessage() {}

func (x *GetRequestSettlementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestSettlementRequest.ProtoReflect.Descriptor instead.
func (*GetRequestSettlementRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{13}
}

type ResponseSettlementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields *SettlementRequest `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponseSettlementRequest) Reset() {
	*x = ResponseSettlementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSettlementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSettlementRequest) ProtoMessage() {}

func (x *ResponseSettlementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSettlementRequest.ProtoReflect.Descriptor instead.
func (*ResponseSettlementRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseSettlementRequest) GetFields() *SettlementRequest {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Market settlement transaction.
type SettlementTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Incoming []*SettlementTransaction_Item `protobuf:"bytes,1,rep,name=incoming,proto3" json:"incoming,omitempty"`
	Outgoing []*SettlementTransaction_Item `protobuf:"bytes,2,rep,name=outgoing,proto3" json:"outgoing,omitempty"`
}

func (x *SettlementTransaction) Reset() {
	*x = SettlementTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementTransaction) ProtoMessage() {}

func (x *SettlementTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementTransaction.ProtoReflect.Descriptor instead.
func (*SettlementTransaction) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{15}
}

func (x *SettlementTransaction) GetIncoming() []*SettlementTransaction_Item {
	if x != nil {
		return x.Incoming
	}
	return nil
}

func (x *SettlementTransaction) GetOutgoing() []*SettlementTransaction_Item {
	if x != nil {
		return x.Outgoing
	}
	return nil
}

type GetRequestSettlementTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequestSettlementTransaction) Reset() {
	*x = GetRequestSettlementTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestSettlementTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestSettlementTransaction) ProtoMessage() {}

func (x *GetRequestSettlementTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestSettlementTransaction.ProtoReflect.Descriptor instead.
func (*GetRequestSettlementTransaction) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{16}
}

type ResponseSettlementTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields *SettlementTransaction `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponseSettlementTransaction) Reset() {
	*x = ResponseSettlementTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSettlementTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSettlementTransaction) ProtoMessage() {}

func (x *ResponseSettlementTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSettlementTransaction.ProtoReflect.Descriptor instead.
func (*ResponseSettlementTransaction) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{17}
}

func (x *ResponseSettlementTransaction) GetFields() *SettlementTransaction {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Limit counterparty.
type CounterpartyLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counterparty id.
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Currency name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Net limit.
	NetLimit float64 `protobuf:"fixed64,3,opt,name=net_limit,json=netLimit,proto3" json:"net_limit,omitempty"`
	// Gross limit.
	GrossLimit float64 `protobuf:"fixed64,4,opt,name=gross_limit,json=grossLimit,proto3" json:"gross_limit,omitempty"`
	// Net limit utilisation.
	NetUtilisation float64 `protobuf:"fixed64,5,opt,name=net_utilisation,json=netUtilisation,proto3" json:"net_utilisation,omitempty"`
	// Gross limit utilisation.
	GrossUtilisation float64 `protobuf:"fixed64,6,opt,name=gross_utilisation,json=grossUtilisation,proto3" json:"gross_utilisation,omitempty"`
	// Reserved.
	Reserved int32 `protobuf:"varint,7,opt,name=reserved,proto3" json:"reserved,omitempty"`
	// Taker markup.
	TakerMarkup int32 `protobuf:"varint,8,opt,name=taker_markup,json=takerMarkup,proto3" json:"taker_markup,omitempty"`
}

func (x *CounterpartyLimit) Reset() {
	*x = CounterpartyLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CounterpartyLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterpartyLimit) ProtoMessage() {}

func (x *CounterpartyLimit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CounterpartyLimit.ProtoReflect.Descriptor instead.
func (*CounterpartyLimit) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{18}
}

func (x *CounterpartyLimit) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *CounterpartyLimit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CounterpartyLimit) GetNetLimit() float64 {
	if x != nil {
		return x.NetLimit
	}
	return 0
}

func (x *CounterpartyLimit) GetGrossLimit() float64 {
	if x != nil {
		return x.GrossLimit
	}
	return 0
}

func (x *CounterpartyLimit) GetNetUtilisation() float64 {
	if x != nil {
		return x.NetUtilisation
	}
	return 0
}

func (x *CounterpartyLimit) GetGrossUtilisation() float64 {
	if x != nil {
		return x.GrossUtilisation
	}
	return 0
}

func (x *CounterpartyLimit) GetReserved() int32 {
	if x != nil {
		return x.Reserved
	}
	return 0
}

func (x *CounterpartyLimit) GetTakerMarkup() int32 {
	if x != nil {
		return x.TakerMarkup
	}
	return 0
}

// Market counterparty limit.
type GetRequestCounterpartyLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequestCounterpartyLimit) Reset() {
	*x = GetRequestCounterpartyLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestCounterpartyLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestCounterpartyLimit) ProtoMessage() {}

func (x *GetRequestCounterpartyLimit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestCounterpartyLimit.ProtoReflect.Descriptor instead.
func (*GetRequestCounterpartyLimit) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{19}
}

type ResponseCounterpartyLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*CounterpartyLimit `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponseCounterpartyLimit) Reset() {
	*x = ResponseCounterpartyLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCounterpartyLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCounterpartyLimit) ProtoMessage() {}

func (x *ResponseCounterpartyLimit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCounterpartyLimit.ProtoReflect.Descriptor instead.
func (*ResponseCounterpartyLimit) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseCounterpartyLimit) GetFields() []*CounterpartyLimit {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Limit.
type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currency name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Net limit.
	NetLimit float64 `protobuf:"fixed64,2,opt,name=net_limit,json=netLimit,proto3" json:"net_limit,omitempty"`
	// Gross limit.
	GrossLimit float64 `protobuf:"fixed64,3,opt,name=gross_limit,json=grossLimit,proto3" json:"gross_limit,omitempty"`
	// Net limit utilisation.
	NetUtilisation float64 `protobuf:"fixed64,4,opt,name=net_utilisation,json=netUtilisation,proto3" json:"net_utilisation,omitempty"`
	// Gross limit utilisation.
	GrossUtilisation float64 `protobuf:"fixed64,5,opt,name=gross_utilisation,json=grossUtilisation,proto3" json:"gross_utilisation,omitempty"`
	// Reserved.
	Reserved int32 `protobuf:"varint,6,opt,name=reserved,proto3" json:"reserved,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{21}
}

func (x *Limit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Limit) GetNetLimit() float64 {
	if x != nil {
		return x.NetLimit
	}
	return 0
}

func (x *Limit) GetGrossLimit() float64 {
	if x != nil {
		return x.GrossLimit
	}
	return 0
}

func (x *Limit) GetNetUtilisation() float64 {
	if x != nil {
		return x.NetUtilisation
	}
	return 0
}

func (x *Limit) GetGrossUtilisation() float64 {
	if x != nil {
		return x.GrossUtilisation
	}
	return 0
}

func (x *Limit) GetReserved() int32 {
	if x != nil {
		return x.Reserved
	}
	return 0
}

// Market limit.
type GetRequestLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequestLimit) Reset() {
	*x = GetRequestLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestLimit) ProtoMessage() {}

func (x *GetRequestLimit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestLimit.ProtoReflect.Descriptor instead.
func (*GetRequestLimit) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{22}
}

type ResponseLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*Limit `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponseLimit) Reset() {
	*x = ResponseLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLimit) ProtoMessage() {}

func (x *ResponseLimit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLimit.ProtoReflect.Descriptor instead.
func (*ResponseLimit) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{23}
}

func (x *ResponseLimit) GetFields() []*Limit {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Position.
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Next deal or settlement id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Asset positions.
	Positions []*Position_Position `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	// Active orders (for makers only).
	Orders []*Position_Order `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
	// Active settlement orders.
	Settlements []*Position_Settlement `protobuf:"bytes,4,rep,name=settlements,proto3" json:"settlements,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{24}
}

func (x *Position) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetPositions() []*Position_Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *Position) GetOrders() []*Position_Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *Position) GetSettlements() []*Position_Settlement {
	if x != nil {
		return x.Settlements
	}
	return nil
}

// Market position.
type GetRequestPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequestPosition) Reset() {
	*x = GetRequestPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestPosition) ProtoMessage() {}

func (x *GetRequestPosition) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestPosition.ProtoReflect.Descriptor instead.
func (*GetRequestPosition) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{25}
}

type ResponsePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields *Position `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponsePosition) Reset() {
	*x = ResponsePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePosition) ProtoMessage() {}

func (x *ResponsePosition) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePosition.ProtoReflect.Descriptor instead.
func (*ResponsePosition) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{26}
}

func (x *ResponsePosition) GetFields() *Position {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Instrument.
type Instrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*Instrument_Currency `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Pairs      []*Instrument_Pair     `protobuf:"bytes,2,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{27}
}

func (x *Instrument) GetCurrencies() []*Instrument_Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *Instrument) GetPairs() []*Instrument_Pair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

// Market instrument.
type GetRequestInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRequestInstrument) Reset() {
	*x = GetRequestInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestInstrument) ProtoMessage() {}

func (x *GetRequestInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestInstrument.ProtoReflect.Descriptor instead.
func (*GetRequestInstrument) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{28}
}

type ResponseInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields *Instrument `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ResponseInstrument) Reset() {
	*x = ResponseInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseInstrument) ProtoMessage() {}

func (x *ResponseInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseInstrument.ProtoReflect.Descriptor instead.
func (*ResponseInstrument) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{29}
}

func (x *ResponseInstrument) GetFields() *Instrument {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Depth_Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assigning string `protobuf:"bytes,1,opt,name=assigning,proto3" json:"assigning,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// Level price.
	Price float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	// Level total size.
	Size float64 `protobuf:"fixed64,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Depth_Attributes) Reset() {
	*x = Depth_Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depth_Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth_Attributes) ProtoMessage() {}

func (x *Depth_Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth_Attributes.ProtoReflect.Descriptor instead.
func (*Depth_Attributes) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Depth_Attributes) GetAssigning() string {
	if x != nil {
		return x.Assigning
	}
	return ""
}

func (x *Depth_Attributes) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Depth_Attributes) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Depth_Attributes) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Reception_Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Level price.
	Price float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	// Level total size.
	Size float64 `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Reception_Book) Reset() {
	*x = Reception_Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reception_Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reception_Book) ProtoMessage() {}

func (x *Reception_Book) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reception_Book.ProtoReflect.Descriptor instead.
func (*Reception_Book) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Reception_Book) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Reception_Book) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SettlementRequest_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counterparty Id.
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Currency name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 0 - No flags.
	// 1 - Fee paid by recipient.
	Flags int32 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	// Requested amount. If zero, the full outstanding position is supposed to be settled.
	Size float64 `protobuf:"fixed64,4,opt,name=size,proto3" json:"size,omitempty"`
	// Comment.
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// Request expiration time in milliseconds. If 0, request won't be expired.
	Timestamp int64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *SettlementRequest_Item) Reset() {
	*x = SettlementRequest_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementRequest_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementRequest_Item) ProtoMessage() {}

func (x *SettlementRequest_Item) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementRequest_Item.ProtoReflect.Descriptor instead.
func (*SettlementRequest_Item) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{12, 0}
}

func (x *SettlementRequest_Item) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SettlementRequest_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SettlementRequest_Item) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *SettlementRequest_Item) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SettlementRequest_Item) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SettlementRequest_Item) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SettlementTransaction_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counterparty Id.
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Currency name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Requested amount. If zero, the full outstanding position is supposed to be settled.
	Size float64 `protobuf:"fixed64,3,opt,name=size,proto3" json:"size,omitempty"`
	// Settlement order id.
	Oid int64 `protobuf:"varint,4,opt,name=oid,proto3" json:"oid,omitempty"`
	// Comment.
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// Created at.
	CreateAt int64 `protobuf:"varint,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// Tx id.
	TxId string `protobuf:"bytes,7,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// Sent at.
	SentAt int64 `protobuf:"varint,8,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	// Settlement transaction flags
	// Bits 0-1
	// 0 = Committed by receiver
	// 1 = Committed by admin
	// 2 = Cancelled by sender
	// 3 = Cancelled by admin
	// Bit 2
	// 1 = Network fee paid by recipient.
	Flags int32 `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
	// Transaction moment.
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transaction id.
	DealId int64 `protobuf:"varint,11,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`
	// Network fee.
	Fee float64 `protobuf:"fixed64,12,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *SettlementTransaction_Item) Reset() {
	*x = SettlementTransaction_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementTransaction_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementTransaction_Item) ProtoMessage() {}

func (x *SettlementTransaction_Item) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementTransaction_Item.ProtoReflect.Descriptor instead.
func (*SettlementTransaction_Item) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{15, 0}
}

func (x *SettlementTransaction_Item) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SettlementTransaction_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SettlementTransaction_Item) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SettlementTransaction_Item) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SettlementTransaction_Item) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SettlementTransaction_Item) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *SettlementTransaction_Item) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *SettlementTransaction_Item) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *SettlementTransaction_Item) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *SettlementTransaction_Item) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SettlementTransaction_Item) GetDealId() int64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *SettlementTransaction_Item) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type Position_Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Counterparty Id.
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Currency name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Value.
	Value float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Position_Position) Reset() {
	*x = Position_Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position_Position) ProtoMessage() {}

func (x *Position_Position) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position_Position.ProtoReflect.Descriptor instead.
func (*Position_Position) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{24, 0}
}

func (x *Position_Position) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Position_Position) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Position_Position) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Position_Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instrument id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Instrument name.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Order Type
	// 0 - limit
	// 1 - post only
	// 2 - limit IOC
	// 3 - limit FOK
	// 4 - market IOC
	// 5 - market FOK.
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// Side
	// 0 - bid
	// 1 - ask.
	Side int32 `protobuf:"varint,4,opt,name=side,proto3" json:"side,omitempty"`
	// Cancel reason
	// 0 - in place or filled
	// 1 - by client
	// 2 - as non-book order
	// 3 - by self-trade prevention
	// 4 - cancel-on-disconnect
	Status int32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	// Client order id.
	Cid int64 `protobuf:"varint,6,opt,name=cid,proto3" json:"cid,omitempty"`
	// Order price.
	Price float64 `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	// Order initial size or volume (depending on order was initially created by size or volume).
	Volume float64 `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	// Remaining order size or volume (depending on order was initially created by size or volume).
	Size float64 `protobuf:"fixed64,9,opt,name=size,proto3" json:"size,omitempty"`
	// If order was created by size or by volume
	// 0 - by size
	// 1 - by volume
	CreatedBy int32 `protobuf:"varint,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Created at.
	Timestamp int64 `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Position_Order) Reset() {
	*x = Position_Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position_Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position_Order) ProtoMessage() {}

func (x *Position_Order) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position_Order.ProtoReflect.Descriptor instead.
func (*Position_Order) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{24, 1}
}

func (x *Position_Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position_Order) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Position_Order) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Position_Order) GetSide() int32 {
	if x != nil {
		return x.Side
	}
	return 0
}

func (x *Position_Order) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Position_Order) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Position_Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Position_Order) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Position_Order) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Position_Order) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Position_Order) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Position_Settlement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Settlement order id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Currency 1.
	BaseName string `protobuf:"bytes,2,opt,name=base_name,json=baseName,proto3" json:"base_name,omitempty"`
	// Currency 2.
	QuoteName string `protobuf:"bytes,3,opt,name=quote_name,json=quoteName,proto3" json:"quote_name,omitempty"`
	// Size 1.
	BaseSize float64 `protobuf:"fixed64,4,opt,name=base_size,json=baseSize,proto3" json:"base_size,omitempty"`
	// Size 2.
	QuoteSize float64 `protobuf:"fixed64,5,opt,name=quote_size,json=quoteSize,proto3" json:"quote_size,omitempty"`
	// Counterparty id.
	Cid int64 `protobuf:"varint,6,opt,name=cid,proto3" json:"cid,omitempty"`
	// Created at.
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Position_Settlement) Reset() {
	*x = Position_Settlement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position_Settlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position_Settlement) ProtoMessage() {}

func (x *Position_Settlement) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position_Settlement.ProtoReflect.Descriptor instead.
func (*Position_Settlement) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{24, 2}
}

func (x *Position_Settlement) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position_Settlement) GetBaseName() string {
	if x != nil {
		return x.BaseName
	}
	return ""
}

func (x *Position_Settlement) GetQuoteName() string {
	if x != nil {
		return x.QuoteName
	}
	return ""
}

func (x *Position_Settlement) GetBaseSize() float64 {
	if x != nil {
		return x.BaseSize
	}
	return 0
}

func (x *Position_Settlement) GetQuoteSize() float64 {
	if x != nil {
		return x.QuoteSize
	}
	return 0
}

func (x *Position_Settlement) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Position_Settlement) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Instrument_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currency id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Currency name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Balance Step, minimum fraction of currency. From 1 to 1000000.
	Size float64 `protobuf:"fixed64,3,opt,name=size,proto3" json:"size,omitempty"`
	// Current USD valuation for risk control.
	Price float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Instrument_Currency) Reset() {
	*x = Instrument_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument_Currency) ProtoMessage() {}

func (x *Instrument_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument_Currency.ProtoReflect.Descriptor instead.
func (*Instrument_Currency) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{27, 0}
}

func (x *Instrument_Currency) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Instrument_Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instrument_Currency) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Instrument_Currency) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Instrument_Pair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instrument id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Instrument name.
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// Asset currency name.
	BaseName string `protobuf:"bytes,3,opt,name=base_name,json=baseName,proto3" json:"base_name,omitempty"`
	// Balance currency name.
	QuoteName string `protobuf:"bytes,4,opt,name=quote_name,json=quoteName,proto3" json:"quote_name,omitempty"`
}

func (x *Instrument_Pair) Reset() {
	*x = Instrument_Pair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_pbmarket_market_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument_Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument_Pair) ProtoMessage() {}

func (x *Instrument_Pair) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_pbmarket_market_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument_Pair.ProtoReflect.Descriptor instead.
func (*Instrument_Pair) Descriptor() ([]byte, []int) {
	return file_server_proto_pbmarket_market_proto_rawDescGZIP(), []int{27, 1}
}

func (x *Instrument_Pair) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Instrument_Pair) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Instrument_Pair) GetBaseName() string {
	if x != nil {
		return x.BaseName
	}
	return ""
}

func (x *Instrument_Pair) GetQuoteName() string {
	if x != nil {
		return x.QuoteName
	}
	return ""
}

var File_server_proto_pbmarket_market_proto protoreflect.FileDescriptor

var file_server_proto_pbmarket_market_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a,
	0x1d, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22,
	0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x05, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x1a, 0x6c, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x95,
	0x01, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03,
	0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x03, 0x61, 0x73, 0x6b, 0x1a, 0x30, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0xa0, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x6e, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x1a, 0x8e, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xb4, 0x03, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x40, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x67, 0x6f,
	0x69, 0x6e, 0x67, 0x1a, 0x96, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x21, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x58, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x37, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x11, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6e, 0x65,
	0x74, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11,
	0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x55, 0x74,
	0x69, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x50, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x73, 0x73,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x5f, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x6e, 0x65, 0x74, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x11, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x73, 0x73,
	0x55, 0x74, 0x69, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x38, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0xda, 0x05, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3f,
	0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x46, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x80, 0x02, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xc4, 0x01, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xc2, 0x02, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x1a, 0x58, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x1a, 0x6a, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x32, 0xd8, 0x08, 0x0a, 0x03, 0x41, 0x70, 0x69,
	0x12, 0x93, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3d, 0x22, 0x1a, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x5a, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x72, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x13, 0x2f, 0x76, 0x32,
	0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x62, 0x6f, 0x6f, 0x6b,
	0x3a, 0x01, 0x2a, 0x5a, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x5f, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x73,
	0x65, 0x74, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x39, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x33, 0x22, 0x15, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2f, 0x67, 0x65, 0x74, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x5a, 0x17,
	0x12, 0x15, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74,
	0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x19, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2f, 0x73, 0x65, 0x74, 0x2d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x96, 0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xac, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e,
	0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x22, 0x1b, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x5a, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x32,
	0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x22, 0x17, 0x2f, 0x76,
	0x32, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x5a, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x42, 0x17, 0x5a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_pbmarket_market_proto_rawDescOnce sync.Once
	file_server_proto_pbmarket_market_proto_rawDescData = file_server_proto_pbmarket_market_proto_rawDesc
)

func file_server_proto_pbmarket_market_proto_rawDescGZIP() []byte {
	file_server_proto_pbmarket_market_proto_rawDescOnce.Do(func() {
		file_server_proto_pbmarket_market_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_pbmarket_market_proto_rawDescData)
	})
	return file_server_proto_pbmarket_market_proto_rawDescData
}

var file_server_proto_pbmarket_market_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_server_proto_pbmarket_market_proto_goTypes = []interface{}{
	(*SetTransactionIncomingRequest)(nil),   // 0: pbmarket.SetTransactionIncomingRequest
	(*ResponseIncomingTransaction)(nil),     // 1: pbmarket.ResponseIncomingTransaction
	(*SetRequestIncomingRequest)(nil),       // 2: pbmarket.SetRequestIncomingRequest
	(*ResponseIncomingRequest)(nil),         // 3: pbmarket.ResponseIncomingRequest
	(*Order)(nil),                           // 4: pbmarket.Order
	(*GetRequestOrder)(nil),                 // 5: pbmarket.GetRequestOrder
	(*SetRequestOrder)(nil),                 // 6: pbmarket.SetRequestOrder
	(*ResponseOrder)(nil),                   // 7: pbmarket.ResponseOrder
	(*Depth)(nil),                           // 8: pbmarket.Depth
	(*Reception)(nil),                       // 9: pbmarket.Reception
	(*GetRequestBook)(nil),                  // 10: pbmarket.GetRequestBook
	(*ResponseBook)(nil),                    // 11: pbmarket.ResponseBook
	(*SettlementRequest)(nil),               // 12: pbmarket.SettlementRequest
	(*GetRequestSettlementRequest)(nil),     // 13: pbmarket.GetRequestSettlementRequest
	(*ResponseSettlementRequest)(nil),       // 14: pbmarket.ResponseSettlementRequest
	(*SettlementTransaction)(nil),           // 15: pbmarket.SettlementTransaction
	(*GetRequestSettlementTransaction)(nil), // 16: pbmarket.GetRequestSettlementTransaction
	(*ResponseSettlementTransaction)(nil),   // 17: pbmarket.ResponseSettlementTransaction
	(*CounterpartyLimit)(nil),               // 18: pbmarket.CounterpartyLimit
	(*GetRequestCounterpartyLimit)(nil),     // 19: pbmarket.GetRequestCounterpartyLimit
	(*ResponseCounterpartyLimit)(nil),       // 20: pbmarket.ResponseCounterpartyLimit
	(*Limit)(nil),                           // 21: pbmarket.Limit
	(*GetRequestLimit)(nil),                 // 22: pbmarket.GetRequestLimit
	(*ResponseLimit)(nil),                   // 23: pbmarket.ResponseLimit
	(*Position)(nil),                        // 24: pbmarket.Position
	(*GetRequestPosition)(nil),              // 25: pbmarket.GetRequestPosition
	(*ResponsePosition)(nil),                // 26: pbmarket.ResponsePosition
	(*Instrument)(nil),                      // 27: pbmarket.Instrument
	(*GetRequestInstrument)(nil),            // 28: pbmarket.GetRequestInstrument
	(*ResponseInstrument)(nil),              // 29: pbmarket.ResponseInstrument
	(*Depth_Attributes)(nil),                // 30: pbmarket.Depth.Attributes
	(*Reception_Book)(nil),                  // 31: pbmarket.Reception.Book
	(*SettlementRequest_Item)(nil),          // 32: pbmarket.SettlementRequest.Item
	(*SettlementTransaction_Item)(nil),      // 33: pbmarket.SettlementTransaction.Item
	(*Position_Position)(nil),               // 34: pbmarket.Position.Position
	(*Position_Order)(nil),                  // 35: pbmarket.Position.Order
	(*Position_Settlement)(nil),             // 36: pbmarket.Position.Settlement
	(*Instrument_Currency)(nil),             // 37: pbmarket.Instrument.Currency
	(*Instrument_Pair)(nil),                 // 38: pbmarket.Instrument.Pair
}
var file_server_proto_pbmarket_market_proto_depIdxs = []int32{
	4,  // 0: pbmarket.ResponseOrder.fields:type_name -> pbmarket.Order
	30, // 1: pbmarket.Depth.fields:type_name -> pbmarket.Depth.Attributes
	31, // 2: pbmarket.Reception.bid:type_name -> pbmarket.Reception.Book
	31, // 3: pbmarket.Reception.ask:type_name -> pbmarket.Reception.Book
	9,  // 4: pbmarket.ResponseBook.fields:type_name -> pbmarket.Reception
	32, // 5: pbmarket.SettlementRequest.incoming:type_name -> pbmarket.SettlementRequest.Item
	32, // 6: pbmarket.SettlementRequest.outgoing:type_name -> pbmarket.SettlementRequest.Item
	12, // 7: pbmarket.ResponseSettlementRequest.fields:type_name -> pbmarket.SettlementRequest
	33, // 8: pbmarket.SettlementTransaction.incoming:type_name -> pbmarket.SettlementTransaction.Item
	33, // 9: pbmarket.SettlementTransaction.outgoing:type_name -> pbmarket.SettlementTransaction.Item
	15, // 10: pbmarket.ResponseSettlementTransaction.fields:type_name -> pbmarket.SettlementTransaction
	18, // 11: pbmarket.ResponseCounterpartyLimit.fields:type_name -> pbmarket.CounterpartyLimit
	21, // 12: pbmarket.ResponseLimit.fields:type_name -> pbmarket.Limit
	34, // 13: pbmarket.Position.positions:type_name -> pbmarket.Position.Position
	35, // 14: pbmarket.Position.orders:type_name -> pbmarket.Position.Order
	36, // 15: pbmarket.Position.settlements:type_name -> pbmarket.Position.Settlement
	24, // 16: pbmarket.ResponsePosition.fields:type_name -> pbmarket.Position
	37, // 17: pbmarket.Instrument.currencies:type_name -> pbmarket.Instrument.Currency
	38, // 18: pbmarket.Instrument.pairs:type_name -> pbmarket.Instrument.Pair
	27, // 19: pbmarket.ResponseInstrument.fields:type_name -> pbmarket.Instrument
	28, // 20: pbmarket.Api.GetInstruments:input_type -> pbmarket.GetRequestInstrument
	10, // 21: pbmarket.Api.GetBook:input_type -> pbmarket.GetRequestBook
	6,  // 22: pbmarket.Api.SetOrder:input_type -> pbmarket.SetRequestOrder
	5,  // 23: pbmarket.Api.GetOrders:input_type -> pbmarket.GetRequestOrder
	2,  // 24: pbmarket.Api.IncomingSettlementRequest:input_type -> pbmarket.SetRequestIncomingRequest
	0,  // 25: pbmarket.Api.IncomingSettlementTransaction:input_type -> pbmarket.SetTransactionIncomingRequest
	16, // 26: pbmarket.Api.GetTransactions:input_type -> pbmarket.GetRequestSettlementTransaction
	13, // 27: pbmarket.Api.GetRequests:input_type -> pbmarket.GetRequestSettlementRequest
	29, // 28: pbmarket.Api.GetInstruments:output_type -> pbmarket.ResponseInstrument
	11, // 29: pbmarket.Api.GetBook:output_type -> pbmarket.ResponseBook
	7,  // 30: pbmarket.Api.SetOrder:output_type -> pbmarket.ResponseOrder
	7,  // 31: pbmarket.Api.GetOrders:output_type -> pbmarket.ResponseOrder
	3,  // 32: pbmarket.Api.IncomingSettlementRequest:output_type -> pbmarket.ResponseIncomingRequest
	1,  // 33: pbmarket.Api.IncomingSettlementTransaction:output_type -> pbmarket.ResponseIncomingTransaction
	17, // 34: pbmarket.Api.GetTransactions:output_type -> pbmarket.ResponseSettlementTransaction
	14, // 35: pbmarket.Api.GetRequests:output_type -> pbmarket.ResponseSettlementRequest
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_server_proto_pbmarket_market_proto_init() }
func file_server_proto_pbmarket_market_proto_init() {
	if File_server_proto_pbmarket_market_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_pbmarket_market_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTransactionIncomingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseIncomingTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequestIncomingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseIncomingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequestOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reception); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestSettlementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSettlementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestSettlementTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSettlementTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CounterpartyLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestCounterpartyLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCounterpartyLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depth_Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reception_Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementRequest_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementTransaction_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position_Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position_Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position_Settlement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instrument_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_pbmarket_market_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instrument_Pair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_pbmarket_market_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_pbmarket_market_proto_goTypes,
		DependencyIndexes: file_server_proto_pbmarket_market_proto_depIdxs,
		MessageInfos:      file_server_proto_pbmarket_market_proto_msgTypes,
	}.Build()
	File_server_proto_pbmarket_market_proto = out.File
	file_server_proto_pbmarket_market_proto_rawDesc = nil
	file_server_proto_pbmarket_market_proto_goTypes = nil
	file_server_proto_pbmarket_market_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ApiClient is the client API for Api service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiClient interface {
	// Get currencies and instruments available.
	GetInstruments(ctx context.Context, in *GetRequestInstrument, opts ...grpc.CallOption) (*ResponseInstrument, error)
	// Get a snapshot of the specified order book with max 25 levels on each side.
	GetBook(ctx context.Context, in *GetRequestBook, opts ...grpc.CallOption) (*ResponseBook, error)
	// Set places an order. Taker can specify order volume instead of order size.
	SetOrder(ctx context.Context, in *SetRequestOrder, opts ...grpc.CallOption) (*ResponseOrder, error)
	// Set places an order. Taker can specify order volume instead of order size.
	GetOrders(ctx context.Context, in *GetRequestOrder, opts ...grpc.CallOption) (*ResponseOrder, error)
	// Adds a request for incoming settlement.
	IncomingSettlementRequest(ctx context.Context, in *SetRequestIncomingRequest, opts ...grpc.CallOption) (*ResponseIncomingRequest, error)
	// Adds outgoing settlement transaction.
	IncomingSettlementTransaction(ctx context.Context, in *SetTransactionIncomingRequest, opts ...grpc.CallOption) (*ResponseIncomingTransaction, error)
	// Returns incoming and outgoing settlement transactions.
	GetTransactions(ctx context.Context, in *GetRequestSettlementTransaction, opts ...grpc.CallOption) (*ResponseSettlementTransaction, error)
	// Returns requests for incoming and outgoing settlement.
	GetRequests(ctx context.Context, in *GetRequestSettlementRequest, opts ...grpc.CallOption) (*ResponseSettlementRequest, error)
}

type apiClient struct {
	cc grpc.ClientConnInterface
}

func NewApiClient(cc grpc.ClientConnInterface) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) GetInstruments(ctx context.Context, in *GetRequestInstrument, opts ...grpc.CallOption) (*ResponseInstrument, error) {
	out := new(ResponseInstrument)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/GetInstruments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetBook(ctx context.Context, in *GetRequestBook, opts ...grpc.CallOption) (*ResponseBook, error) {
	out := new(ResponseBook)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/GetBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) SetOrder(ctx context.Context, in *SetRequestOrder, opts ...grpc.CallOption) (*ResponseOrder, error) {
	out := new(ResponseOrder)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/SetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetOrders(ctx context.Context, in *GetRequestOrder, opts ...grpc.CallOption) (*ResponseOrder, error) {
	out := new(ResponseOrder)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/GetOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) IncomingSettlementRequest(ctx context.Context, in *SetRequestIncomingRequest, opts ...grpc.CallOption) (*ResponseIncomingRequest, error) {
	out := new(ResponseIncomingRequest)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/IncomingSettlementRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) IncomingSettlementTransaction(ctx context.Context, in *SetTransactionIncomingRequest, opts ...grpc.CallOption) (*ResponseIncomingTransaction, error) {
	out := new(ResponseIncomingTransaction)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/IncomingSettlementTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetTransactions(ctx context.Context, in *GetRequestSettlementTransaction, opts ...grpc.CallOption) (*ResponseSettlementTransaction, error) {
	out := new(ResponseSettlementTransaction)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetRequests(ctx context.Context, in *GetRequestSettlementRequest, opts ...grpc.CallOption) (*ResponseSettlementRequest, error) {
	out := new(ResponseSettlementRequest)
	err := c.cc.Invoke(ctx, "/pbmarket.Api/GetRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServer is the server API for Api service.
type ApiServer interface {
	// Get currencies and instruments available.
	GetInstruments(context.Context, *GetRequestInstrument) (*ResponseInstrument, error)
	// Get a snapshot of the specified order book with max 25 levels on each side.
	GetBook(context.Context, *GetRequestBook) (*ResponseBook, error)
	// Set places an order. Taker can specify order volume instead of order size.
	SetOrder(context.Context, *SetRequestOrder) (*ResponseOrder, error)
	// Set places an order. Taker can specify order volume instead of order size.
	GetOrders(context.Context, *GetRequestOrder) (*ResponseOrder, error)
	// Adds a request for incoming settlement.
	IncomingSettlementRequest(context.Context, *SetRequestIncomingRequest) (*ResponseIncomingRequest, error)
	// Adds outgoing settlement transaction.
	IncomingSettlementTransaction(context.Context, *SetTransactionIncomingRequest) (*ResponseIncomingTransaction, error)
	// Returns incoming and outgoing settlement transactions.
	GetTransactions(context.Context, *GetRequestSettlementTransaction) (*ResponseSettlementTransaction, error)
	// Returns requests for incoming and outgoing settlement.
	GetRequests(context.Context, *GetRequestSettlementRequest) (*ResponseSettlementRequest, error)
}

// UnimplementedApiServer can be embedded to have forward compatible implementations.
type UnimplementedApiServer struct {
}

func (*UnimplementedApiServer) GetInstruments(context.Context, *GetRequestInstrument) (*ResponseInstrument, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstruments not implemented")
}
func (*UnimplementedApiServer) GetBook(context.Context, *GetRequestBook) (*ResponseBook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBook not implemented")
}
func (*UnimplementedApiServer) SetOrder(context.Context, *SetRequestOrder) (*ResponseOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrder not implemented")
}
func (*UnimplementedApiServer) GetOrders(context.Context, *GetRequestOrder) (*ResponseOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrders not implemented")
}
func (*UnimplementedApiServer) IncomingSettlementRequest(context.Context, *SetRequestIncomingRequest) (*ResponseIncomingRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncomingSettlementRequest not implemented")
}
func (*UnimplementedApiServer) IncomingSettlementTransaction(context.Context, *SetTransactionIncomingRequest) (*ResponseIncomingTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncomingSettlementTransaction not implemented")
}
func (*UnimplementedApiServer) GetTransactions(context.Context, *GetRequestSettlementTransaction) (*ResponseSettlementTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}
func (*UnimplementedApiServer) GetRequests(context.Context, *GetRequestSettlementRequest) (*ResponseSettlementRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRequests not implemented")
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_GetInstruments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestInstrument)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetInstruments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/GetInstruments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetInstruments(ctx, req.(*GetRequestInstrument))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestBook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetBook(ctx, req.(*GetRequestBook))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_SetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequestOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).SetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/SetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).SetOrder(ctx, req.(*SetRequestOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/GetOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetOrders(ctx, req.(*GetRequestOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_IncomingSettlementRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequestIncomingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).IncomingSettlementRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/IncomingSettlementRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).IncomingSettlementRequest(ctx, req.(*SetRequestIncomingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_IncomingSettlementTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTransactionIncomingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).IncomingSettlementTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/IncomingSettlementTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).IncomingSettlementTransaction(ctx, req.(*SetTransactionIncomingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestSettlementTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetTransactions(ctx, req.(*GetRequestSettlementTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequestSettlementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbmarket.Api/GetRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetRequests(ctx, req.(*GetRequestSettlementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbmarket.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInstruments",
			Handler:    _Api_GetInstruments_Handler,
		},
		{
			MethodName: "GetBook",
			Handler:    _Api_GetBook_Handler,
		},
		{
			MethodName: "SetOrder",
			Handler:    _Api_SetOrder_Handler,
		},
		{
			MethodName: "GetOrders",
			Handler:    _Api_GetOrders_Handler,
		},
		{
			MethodName: "IncomingSettlementRequest",
			Handler:    _Api_IncomingSettlementRequest_Handler,
		},
		{
			MethodName: "IncomingSettlementTransaction",
			Handler:    _Api_IncomingSettlementTransaction_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _Api_GetTransactions_Handler,
		},
		{
			MethodName: "GetRequests",
			Handler:    _Api_GetRequests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/proto/pbmarket/market.proto",
}
