// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: server/proto/account.proto

package proto

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User structure.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email    string       `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreateAt string       `protobuf:"bytes,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Status   bool         `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Counts   *User_Counts `protobuf:"bytes,6,opt,name=counts,proto3" json:"counts,omitempty"`
	Rules    []string     `protobuf:"bytes,7,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *User) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *User) GetCounts() *User_Counts {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *User) GetRules() []string {
	if x != nil {
		return x.Rules
	}
	return nil
}

// Activity structure.
type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Os       string   `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Device   string   `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Ip       string   `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	UserId   int64    `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Browser  []string `protobuf:"bytes,7,rep,name=browser,proto3" json:"browser,omitempty"`
	CreateAt string   `protobuf:"bytes,8,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{1}
}

func (x *Activity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Activity) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Activity) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Activity) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Activity) GetBrowser() []string {
	if x != nil {
		return x.Browser
	}
	return nil
}

func (x *Activity) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

// User structure.
type GetAccountRequestUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAccountRequestUser) Reset() {
	*x = GetAccountRequestUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequestUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequestUser) ProtoMessage() {}

func (x *GetAccountRequestUser) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequestUser.ProtoReflect.Descriptor instead.
func (*GetAccountRequestUser) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{2}
}

type GetAccountRequestUserRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAccountRequestUserRule) Reset() {
	*x = GetAccountRequestUserRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequestUserRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequestUserRule) ProtoMessage() {}

func (x *GetAccountRequestUserRule) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequestUserRule.ProtoReflect.Descriptor instead.
func (*GetAccountRequestUserRule) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountRequestUserRule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAccountRequestUsersRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page   int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetAccountRequestUsersRule) Reset() {
	*x = GetAccountRequestUsersRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequestUsersRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequestUsersRule) ProtoMessage() {}

func (x *GetAccountRequestUsersRule) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequestUsersRule.ProtoReflect.Descriptor instead.
func (*GetAccountRequestUsersRule) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountRequestUsersRule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAccountRequestUsersRule) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccountRequestUsersRule) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAccountRequestUsersRule) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type SetAccountRequestUserManual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sample      string `protobuf:"bytes,2,opt,name=sample,proto3" json:"sample,omitempty"`
	OldPassword string `protobuf:"bytes,3,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,4,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	User        *User  `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *SetAccountRequestUserManual) Reset() {
	*x = SetAccountRequestUserManual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAccountRequestUserManual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAccountRequestUserManual) ProtoMessage() {}

func (x *SetAccountRequestUserManual) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAccountRequestUserManual.ProtoReflect.Descriptor instead.
func (*SetAccountRequestUserManual) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{5}
}

func (x *SetAccountRequestUserManual) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetAccountRequestUserManual) GetSample() string {
	if x != nil {
		return x.Sample
	}
	return ""
}

func (x *SetAccountRequestUserManual) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *SetAccountRequestUserManual) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *SetAccountRequestUserManual) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Activity structure.
type GetAccountRequestActivities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAccountRequestActivities) Reset() {
	*x = GetAccountRequestActivities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequestActivities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequestActivities) ProtoMessage() {}

func (x *GetAccountRequestActivities) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequestActivities.ProtoReflect.Descriptor instead.
func (*GetAccountRequestActivities) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{6}
}

func (x *GetAccountRequestActivities) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccountRequestActivities) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ResponseAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email      string      `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status     bool        `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Activities []*Activity `protobuf:"bytes,5,rep,name=activities,proto3" json:"activities,omitempty"`
	Sample     []string    `protobuf:"bytes,6,rep,name=sample,proto3" json:"sample,omitempty"`
	Rules      []string    `protobuf:"bytes,7,rep,name=rules,proto3" json:"rules,omitempty"`
	Fields     []*User     `protobuf:"bytes,8,rep,name=fields,proto3" json:"fields,omitempty"`
	Count      int32       `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ResponseAccount) Reset() {
	*x = ResponseAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAccount) ProtoMessage() {}

func (x *ResponseAccount) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAccount.ProtoReflect.Descriptor instead.
func (*ResponseAccount) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseAccount) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResponseAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponseAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResponseAccount) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ResponseAccount) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *ResponseAccount) GetSample() []string {
	if x != nil {
		return x.Sample
	}
	return nil
}

func (x *ResponseAccount) GetRules() []string {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ResponseAccount) GetFields() []*User {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ResponseAccount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type User_Counts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction int32 `protobuf:"varint,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Order       int32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Asset       int32 `protobuf:"varint,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *User_Counts) Reset() {
	*x = User_Counts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Counts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Counts) ProtoMessage() {}

func (x *User_Counts) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Counts.ProtoReflect.Descriptor instead.
func (*User_Counts) Descriptor() ([]byte, []int) {
	return file_server_proto_account_proto_rawDescGZIP(), []int{0, 0}
}

func (x *User_Counts) GetTransaction() int32 {
	if x != nil {
		return x.Transaction
	}
	return 0
}

func (x *User_Counts) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *User_Counts) GetAsset() int32 {
	if x != nil {
		return x.Asset
	}
	return 0
}

var File_server_proto_account_proto protoreflect.FileDescriptor

var file_server_proto_account_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x06, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xac,
	0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c,
	0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x47, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xae, 0x05, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x60, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x32,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x75, 0x73, 0x65,
	0x72, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x73, 0x65, 0x74, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x67,
	0x65, 0x74, 0x2d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x77, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f,
	0x76, 0x32, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x67, 0x65, 0x74, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x76, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x2d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x0e, 0x5a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_account_proto_rawDescOnce sync.Once
	file_server_proto_account_proto_rawDescData = file_server_proto_account_proto_rawDesc
)

func file_server_proto_account_proto_rawDescGZIP() []byte {
	file_server_proto_account_proto_rawDescOnce.Do(func() {
		file_server_proto_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_account_proto_rawDescData)
	})
	return file_server_proto_account_proto_rawDescData
}

var file_server_proto_account_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_server_proto_account_proto_goTypes = []interface{}{
	(*User)(nil),                        // 0: proto.User
	(*Activity)(nil),                    // 1: proto.Activity
	(*GetAccountRequestUser)(nil),       // 2: proto.GetAccountRequestUser
	(*GetAccountRequestUserRule)(nil),   // 3: proto.GetAccountRequestUserRule
	(*GetAccountRequestUsersRule)(nil),  // 4: proto.GetAccountRequestUsersRule
	(*SetAccountRequestUserManual)(nil), // 5: proto.SetAccountRequestUserManual
	(*GetAccountRequestActivities)(nil), // 6: proto.GetAccountRequestActivities
	(*ResponseAccount)(nil),             // 7: proto.ResponseAccount
	(*User_Counts)(nil),                 // 8: proto.User.Counts
}
var file_server_proto_account_proto_depIdxs = []int32{
	8,  // 0: proto.User.counts:type_name -> proto.User.Counts
	0,  // 1: proto.SetAccountRequestUserManual.user:type_name -> proto.User
	1,  // 2: proto.ResponseAccount.activities:type_name -> proto.Activity
	0,  // 3: proto.ResponseAccount.fields:type_name -> proto.User
	2,  // 4: proto.Account.GetUser:input_type -> proto.GetAccountRequestUser
	5,  // 5: proto.Account.SetUser:input_type -> proto.SetAccountRequestUserManual
	6,  // 6: proto.Account.GetActivities:input_type -> proto.GetAccountRequestActivities
	4,  // 7: proto.Account.GetAccountsRule:input_type -> proto.GetAccountRequestUsersRule
	3,  // 8: proto.Account.GetAccountRule:input_type -> proto.GetAccountRequestUserRule
	5,  // 9: proto.Account.SetAccountRule:input_type -> proto.SetAccountRequestUserManual
	7,  // 10: proto.Account.GetUser:output_type -> proto.ResponseAccount
	7,  // 11: proto.Account.SetUser:output_type -> proto.ResponseAccount
	7,  // 12: proto.Account.GetActivities:output_type -> proto.ResponseAccount
	7,  // 13: proto.Account.GetAccountsRule:output_type -> proto.ResponseAccount
	7,  // 14: proto.Account.GetAccountRule:output_type -> proto.ResponseAccount
	7,  // 15: proto.Account.SetAccountRule:output_type -> proto.ResponseAccount
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_server_proto_account_proto_init() }
func file_server_proto_account_proto_init() {
	if File_server_proto_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequestUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequestUserRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequestUsersRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAccountRequestUserManual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequestActivities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Counts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_account_proto_goTypes,
		DependencyIndexes: file_server_proto_account_proto_depIdxs,
		MessageInfos:      file_server_proto_account_proto_msgTypes,
	}.Build()
	File_server_proto_account_proto = out.File
	file_server_proto_account_proto_rawDesc = nil
	file_server_proto_account_proto_goTypes = nil
	file_server_proto_account_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccountClient is the client API for Account service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountClient interface {
	// Account info.
	GetUser(ctx context.Context, in *GetAccountRequestUser, opts ...grpc.CallOption) (*ResponseAccount, error)
	// Account info update.
	SetUser(ctx context.Context, in *SetAccountRequestUserManual, opts ...grpc.CallOption) (*ResponseAccount, error)
	// Activities list.
	GetActivities(ctx context.Context, in *GetAccountRequestActivities, opts ...grpc.CallOption) (*ResponseAccount, error)
	// Administration api.
	// Get accounts.
	GetAccountsRule(ctx context.Context, in *GetAccountRequestUsersRule, opts ...grpc.CallOption) (*ResponseAccount, error)
	// Get account.
	GetAccountRule(ctx context.Context, in *GetAccountRequestUserRule, opts ...grpc.CallOption) (*ResponseAccount, error)
	// Set account.
	SetAccountRule(ctx context.Context, in *SetAccountRequestUserManual, opts ...grpc.CallOption) (*ResponseAccount, error)
}

type accountClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountClient(cc grpc.ClientConnInterface) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) GetUser(ctx context.Context, in *GetAccountRequestUser, opts ...grpc.CallOption) (*ResponseAccount, error) {
	out := new(ResponseAccount)
	err := c.cc.Invoke(ctx, "/proto.Account/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) SetUser(ctx context.Context, in *SetAccountRequestUserManual, opts ...grpc.CallOption) (*ResponseAccount, error) {
	out := new(ResponseAccount)
	err := c.cc.Invoke(ctx, "/proto.Account/SetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetActivities(ctx context.Context, in *GetAccountRequestActivities, opts ...grpc.CallOption) (*ResponseAccount, error) {
	out := new(ResponseAccount)
	err := c.cc.Invoke(ctx, "/proto.Account/GetActivities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetAccountsRule(ctx context.Context, in *GetAccountRequestUsersRule, opts ...grpc.CallOption) (*ResponseAccount, error) {
	out := new(ResponseAccount)
	err := c.cc.Invoke(ctx, "/proto.Account/GetAccountsRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetAccountRule(ctx context.Context, in *GetAccountRequestUserRule, opts ...grpc.CallOption) (*ResponseAccount, error) {
	out := new(ResponseAccount)
	err := c.cc.Invoke(ctx, "/proto.Account/GetAccountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) SetAccountRule(ctx context.Context, in *SetAccountRequestUserManual, opts ...grpc.CallOption) (*ResponseAccount, error) {
	out := new(ResponseAccount)
	err := c.cc.Invoke(ctx, "/proto.Account/SetAccountRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServer is the server API for Account service.
type AccountServer interface {
	// Account info.
	GetUser(context.Context, *GetAccountRequestUser) (*ResponseAccount, error)
	// Account info update.
	SetUser(context.Context, *SetAccountRequestUserManual) (*ResponseAccount, error)
	// Activities list.
	GetActivities(context.Context, *GetAccountRequestActivities) (*ResponseAccount, error)
	// Administration api.
	// Get accounts.
	GetAccountsRule(context.Context, *GetAccountRequestUsersRule) (*ResponseAccount, error)
	// Get account.
	GetAccountRule(context.Context, *GetAccountRequestUserRule) (*ResponseAccount, error)
	// Set account.
	SetAccountRule(context.Context, *SetAccountRequestUserManual) (*ResponseAccount, error)
}

// UnimplementedAccountServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServer struct {
}

func (*UnimplementedAccountServer) GetUser(context.Context, *GetAccountRequestUser) (*ResponseAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedAccountServer) SetUser(context.Context, *SetAccountRequestUserManual) (*ResponseAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUser not implemented")
}
func (*UnimplementedAccountServer) GetActivities(context.Context, *GetAccountRequestActivities) (*ResponseAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivities not implemented")
}
func (*UnimplementedAccountServer) GetAccountsRule(context.Context, *GetAccountRequestUsersRule) (*ResponseAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountsRule not implemented")
}
func (*UnimplementedAccountServer) GetAccountRule(context.Context, *GetAccountRequestUserRule) (*ResponseAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountRule not implemented")
}
func (*UnimplementedAccountServer) SetAccountRule(context.Context, *SetAccountRequestUserManual) (*ResponseAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccountRule not implemented")
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequestUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetUser(ctx, req.(*GetAccountRequestUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_SetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAccountRequestUserManual)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).SetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/SetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).SetUser(ctx, req.(*SetAccountRequestUserManual))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequestActivities)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/GetActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetActivities(ctx, req.(*GetAccountRequestActivities))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetAccountsRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequestUsersRule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetAccountsRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/GetAccountsRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetAccountsRule(ctx, req.(*GetAccountRequestUsersRule))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetAccountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequestUserRule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetAccountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/GetAccountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetAccountRule(ctx, req.(*GetAccountRequestUserRule))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_SetAccountRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAccountRequestUserManual)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).SetAccountRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Account/SetAccountRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).SetAccountRule(ctx, req.(*SetAccountRequestUserManual))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Account_GetUser_Handler,
		},
		{
			MethodName: "SetUser",
			Handler:    _Account_SetUser_Handler,
		},
		{
			MethodName: "GetActivities",
			Handler:    _Account_GetActivities_Handler,
		},
		{
			MethodName: "GetAccountsRule",
			Handler:    _Account_GetAccountsRule_Handler,
		},
		{
			MethodName: "GetAccountRule",
			Handler:    _Account_GetAccountRule_Handler,
		},
		{
			MethodName: "SetAccountRule",
			Handler:    _Account_SetAccountRule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/proto/account.proto",
}
